version: '3.0'
services:
  app:
    container_name: college_app
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - "8080:8080"
    links:
      - postgresqldb
      - kafka
    depends_on:
      - postgresqldb
      - kafka
    environment:
      KAFKA_SERVER: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresqldb:5432/academy
      SPRING_DATASOURCE_USERNAME: ilya
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none

  postgresqldb:
    container_name: postgres-db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "academy"
      POSTGRES_USER: "ilya"
      POSTGRES_PASSWORD: "postgres"
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  logger:
    container_name: college_logger
    build:
      context: ../college_logger
      dockerfile: Dockerfile
    ports:
      - "8070:8070"
    environment:
      KAFKA_SERVER: kafka:9092
      LOGSTASH_SERVER: logstash:5000
    depends_on:
      - kafka
      - logstash

  elasticsearch:
    image: elasticsearch:8.4.1
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data-volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  kibana:
    container_name: kibana
    image: kibana:8.4.1
    restart: always
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:8.4.1
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ../college_logger/config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch

volumes:
  postgresql-data:
  elasticsearch-data-volume:
    driver: local
